version: '3.5'

services:
  node:
    build:
      context: .
    restart: on-failure
    ports:
      - ${PORT}:${PORT}
    depends_on:
      - postgres
    environment:
      - PORT=4000
    volumes:
      - ./src:/usr/app/src
      - ./combined.log:/usr/app/combined.log
      - ./error.log:/usr/app/error.log
    networks:
      - my-network
  postgres:
    build: ./database
    restart: on-failure
    networks:
      - my-network
    ports:
      - ${POSTGRES_PORT}:${POSTGRES_PORT}
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - PGDATA=/var/lib/postgresql/data/pgdata
    volumes:
      - ./dbdata:/var/lib/postgresql/data

  rs_admin:
    container_name: rs_db_admin_container
    image: dpage/pgadmin4:4.21
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    volumes:
      - ./pgadmin:/root/.pgadmin
    ports:
      - '61000:80'
    restart: unless-stopped
    depends_on:
      - postgres
    networks:
      - my-network

networks:
  my-network:
    driver: bridge
volumes:
  dbdata:
  node_modules:
  log: